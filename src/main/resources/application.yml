spring:
  # app 이름
  application:
    name: demo
  # 오라클 연동
  datasource:
    driver-class-name: oracle.jdbc.OracleDriver
    url: jdbc:oracle:thin:@localhost:1521/xe
    username: c##spring
    password: spring1234
  # SQL 스크립트 자동 실행 설정
  sql:
    init:
      mode: always
      schema-locations: classpath:sql/schema.sql
      data-locations: classpath:sql/data.sql

  # Elasticsearch 설정 (테스트용)
  elasticsearch:
    uris: localhost:9200
    username: elastic
    password: admin1234

  # 파일 업로드 설정
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  #ai
  ai:
    openai:
      api-key: ${OPENAI_API_KEY}

# 웹서버 포트
server:
  port: 9082
#서버 세션 타임아웃 설정
#기본은 1800(30분), 최소값 60(1분)
  servlet:
    session:
      timeout: 60
#클라이언트의 세션아이디를 서버가 받는 방식
#1. 클라이언트의 쿠키정보를 읽어 요청할때마다 요청메세지 헤더에 세션아이디를 취득
#2. 클라이언트의 쿼리스트링을 읽어 세션아이디를 취득
      tracking-mode: cookie

# 파일 업로드 설정
file:
  upload:
    path: /uploads

# 로그레벨
# trace > debug > info > warn > error > fatal
logging:
  level:
    org.springframework.jdbc: DEBUG     #JDBCTemplate sql log
    org.hibernate.SQL: DEBUG    # SQL 확인
    org.hibernate.type: TRACE   # SQL 파라미터확인
    # Elasticsearch 실제 쿼리 전송 로깅 (핵심 설정)
    org.elasticsearch.client.RestClient: DEBUG    # 실제 HTTP 요청/응답 로깅
    org.apache.http.wire: DEBUG                  # HTTP 요청/응답 본문 로깅

